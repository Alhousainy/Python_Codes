print('='*30)
import numpy as np 
num = np.sin(30)
num2=np.sin(30*np.pi/180)
print('The Result 30 Is => ',num)#The Result 30 Is =>  -0.9880316240928618
print('The Result 30  Is => ',num2)#The Result 30  Is =>  0.49999999999999994
num3 = int(input('Please Enter Number => '))
print('The Sin Number ',num3, 'Is => ',np.sin(np.deg2rad(num3)))#The Sin Number  30 Is=>0.499
num4=float(input('Please Enter The Floating Number : '))
print('The Round For Floating Number ',num4,' Is =>',np.round(num4))
#The Round For Floating Number  4.578945  Is => 5.0
print('The Round For Floating Number ',num4,' Is =>',np.round(num4,1))
#The Round For Floating Number  4.578945  Is => 4.6
print('The Round For Floating Number ',num4,' Is =>',np.round(num4,2))
#The Round For Floating Number  4.578945  Is => 4.58
print('The Round For Floating Number ',num4,' Is =>',np.round(num4,3))
#The Round For Floating Number  4.578945  Is => 4.579
print('The Floor For Floating Number ',num4,'Is =>',np.floor(num4))
#The Floor For Floating Number  4.25789 Is => 4.0
print('The Ceil For Floating Number ',num4,'Is=>',np.ceil(num4))
#The Ceil For Floating Number  4.25789 Is=> 5.0
num5=int(input('Please Enter The Real Number :'))
print('The Moduls Number ',num5,'For 5 Is = ',np.mod(num5,5))
#The Moduls Number  69 For 5 Is =  4
print('The Square Number ',num3,'Is => ',np.power(num3,2))
#The Square Number  5 Is =>  25
L= [0,1,2,3,4,5,6,7]
print('The Marix Is => ',np.array(L))#The Marix Is =>  [0 1 2 3 4 5 6 7]
print('The Matrix Is => ',np.array([1,2,3,4,5,6]))#The Matrix Is =>  [1 2 3 4 5 6]
L1=[[1,2,3,4],[5,6,7,8],[9,10,12,15]]
print('The Matrix Is => ',np.array(L1))
'''
The Matrix Is =>  [[ 1  2  3  4]
 [ 5  6  7  8]
 [ 9 10 12 15]]
'''
L2=[range(i,i+3)for i in[2,4,6]]
print('The List Is => ',list(L2))#The List Is =>  [range(2, 5), range(4, 7), range(6, 9)]
print('The Matrix Is => ',np.array(L2))
'''
The Matrix Is =>
[[2 3 4]
[4 5 6]
[6 7 8]]
'''
L3=np.array([('x',3,4.2),('y',4,5.3),('z',5,6.3)],
dtype =[('name','U5'),('number','i2'),
('value','f4')])
print('The Matrix Is => ',L3)#The Matrix Is =>  [('x', 3, 4.2) ('y', 4, 5.3) ('z', 5, 6.3)]
var=np.empty((3,2))
print('The Matrix Is => ',var)
'''
The Matrix Is =>  
[[4.24399158e-314 8.48798317e-314]
[1.27319747e-313 1.69759663e-313]
[2.12199579e-313 3.18299369e-313]]
'''
print('='*30)
var1=np.random.uniform(1,10)
var2=np.random.uniform(1,10,20)
print('The Random Number Is => ',var1)#The Random Number Is =>  4.691959173105228
print('='*30)
print('The Twenty Random Numbers From 1 To 10 Is =>  ',var2)
'''
The Twenty Random Numbers From 1 To 10 Is =>
[7.65075748 5.18935907 8.91585335 7.60053221 4.01840575 7.88196
9.74484475 7.79613903 2.96924091 4.45960687 2.78742339 2.2388055
8.58536305 8.78703194 5.41618899 9.51115481 8.24953635 2.4339195
8.05830939 8.34280844]
'''
print('='*30)
print('The Matrix 20 Random Numbers Is => ',np.array(var2))
'''
The Matrix 20 Random Numbers Is =>
[8.34585416 7.59174647 6.63682018 7.94741645 1.35260361 9.24816166
3.96238809 6.02221863 3.73801046 9.48584691 9.22295585 2.94033936
1.24842705 8.35147293 7.7607739  8.7358315  1.12380003 7.26555098
4.03855237 5.37254755]
'''
print('='*30)
var3=np.random.random((5,5))
print('The Random Matrix From 0 To 1 Is => ',var3)
print('='*30)
'''
The Random Matrix From 0 To 1 Is =>
[[0.5707799  0.26557874 0.38038679 0.9156533  0.97061111]
[0.15866197 0.44649666 0.86309353 0.54855619 0.11239999]
[0.75713463 0.1290202  0.7639811  0.8818095  0.39258849]
[0.30440317 0.04923652 0.34285227 0.47550355 0.30112789]
[0.01827829 0.55237131 0.7638392  0.06610482 0.63679142]]
'''
print('The Random Number Form 0 To 10 Is => ',var3*10)
print('='*30)
'''
The Random Number Form 0 To 10 Is =>
[[4.22704281 8.30674904 7.15310712 7.09793662 9.54427427]
[0.35237772 8.17707507 9.95071737 1.27632114 0.08899229]
[6.66342414 4.28115356 3.34065044 1.72415318 2.17048505]
[4.41802315 5.83582244 9.96021121 5.1970907  2.60957849]
[4.27677152 2.17146583 5.05319425 9.62545186 4.3818651 ]]
'''
print('The Random Numbers From 10 To 20 Is => ',(var3*10)+10)
print('='*30)
'''
The Random Numbers From 10 To 20 Is =>
[[17.14994936 16.78666039 10.43519261 11.14598804 15.87570756]
[18.74897258 12.41857137 18.76107642 13.19254454 14.07113171]
[14.76519682 12.02165409 18.5170011  16.39124439 15.72775657]
[18.1304802  11.06239088 11.76997069 19.28139023 12.49875039]
[10.62375464 18.31325333 11.8450996  18.17615027 12.17668821]]
'''
var4=np.random.normal(0,1,10)
print('The Random Noramal Distrbution From 0 To 10 Is => ',var4)
print('='*30)
'''
The Random Noramal Distrbution From 0 To 10 Is =>
[ 0.04179435  0.72563316  0.42792849  0.90802511 -0.23115754  1.71174778
-1.54463373  0.23613387 -0.28688927 -1.50979111]
'''
var5=np.random.randint(0,150,15)
print('The Random Integer Number From 0 To 150 Is => ',var5)
#The Random Integer Number From 0 To 150 Is=>[42 124 0 136 48 121 31 93 76 98 74 68 130 3 118]
print('='*30)
var6=np.random.randint(150,size=100)
print('The Random Integer Number Is => ',var6)
print('='*30)
'''
The Random Integer Number Is =>
[ 84  49 104  85 136  17  98 147  11 141 130  91  77 107  34  42  15  26
12  10  19  59  97  66  44  52  68 134  16 127  28 105  73  91 148 140    
114  86  86  56 143  32  22  30   1 122  49  88  98 102 135 144  65  84    
99  81   1  57  87  87  81 119  90  31  33  43  87  63 139  99  66 103    
41   6  66 149  92  45   3  36 131  92  42 135  18   9  98 105   9  56    
30  16 114   6   5  12 124  55 136  61]
'''
var7=np.random.randint(5,20,size=7)
print('The Random Integer Number Is => ',var7)
#The Random Integer Number Is =>  [17  5 15  7 19  9 14]
print('='*30)
var8=np.random.randint(5,30,(5,5))
print('The Matrix Is => ',var8)
print('='*30)
'''
The Matrix Is =>  
[[28 28 23 21 29]
[12 17  8  7 16]
[ 5 16  8 10 13]
[28 14  9 23 22]
[17 23 12 13  9]]
'''
var9=np.random.randint(5,15,size=(3,5,5))
print('The 3D Matrix Is => ',var9)
print('='*30)
'''
The 3D Matrix Is => 
[[[ 9 13  6 12  5]
[ 9 13 13 12  8]
[ 9 10  5  7 10]
[11 11  8  7 10]
[13  9 11 11  5]]

[[11  5 14  8 12]
[ 9  6 13  6 14]
[11  5  9  8  6]
[12 14  5 14  9]
[12  7 10  9 10]]

[[13 12  7 10 10]
[ 5 13  8 10  8]
[ 7 13  7  7 12]
[ 9 13  5 11  6]
[14  9 12  5  6]]]
'''
var10=np.random.randint(1,60,25)
R=np.reshape(var10,(5,5))
print('The Random Integer Number Is => ',var10)
#The Random Integer Number Is=>
#[12 18 40 57 30 57 13 34 20 34 56 54 23 49 3 22 54 45 9 5 10 28 12 47 21]
print('The Matrix Is => ',R)
print('='*30)
'''
The Matrix Is =>  
[[12 18 40 57 30]
[57 13 34 20 34]
[56 54 23 49  3]
[22 54 45  9  5]
[10 28 12 47 21]]
'''
num =np.random.rand(15)
print('The Random Floating Point Number Is => ',num)
print('='*30)
'''
The Random Floating Point Number Is =>
[0.12042102 0.15776465 0.38502574 0.23849039 0.97789536 0.58434374
0.86487992 0.36486556 0.7668642  0.18009799 0.35044596 0.66684485
0.69986971 0.87320389 0.54221182]
'''
num1=np.random.rand(5,5)
print('The Random Matrix Is => ',num1)
print('='*30)
'''
The Random Matrix Is =>
[[0.5006605  0.28204847 0.77509197 0.23688184 0.44079322]
[0.6179183  0.00231457 0.88026678 0.45231043 0.70353645]
[0.95252036 0.85925697 0.00400474 0.18935727 0.35006393]
[0.97378719 0.82717105 0.0569124  0.38327231 0.15373528]
[0.52419655 0.62940415 0.31819516 0.50695486 0.78001391]]
'''
num_1=np.random.rand(4,5,5)
print('The Multi Demionsial Matrix Is => ',num_1)
print('='*30)
'''
The Multi Demionsial Matrix Is =>  
[[[0.69277581 0.28248463 0.34786948 0.04920201 0.03510421]
[0.2725579  0.7181966  0.84990756 0.78656961 0.21000898]
[0.29620085 0.43530175 0.66482134 0.59573082 0.78378378]
[0.51687284 0.83554989 0.51287335 0.22089059 0.99690563]
[0.32822204 0.91671456 0.9088214  0.53268544 0.83461358]]

[[0.57617084 0.15075487 0.52810283 0.89231101 0.45801948]
[0.01143255 0.6598717  0.06193561 0.07404102 0.98845831]
[0.81425105 0.82923234 0.05527631 0.30512356 0.40750075]
[0.82496714 0.32335617 0.47029858 0.12599882 0.06589568]
[0.44374337 0.30894403 0.31578948 0.4333405  0.16492966]]

[[0.44932568 0.96644208 0.82471872 0.46955559 0.97021386]
[0.08205065 0.77789461 0.7116419  0.04825608 0.95366104]
[0.92083621 0.46605988 0.80074609 0.8775122  0.99992317]
[0.19570575 0.04579173 0.0476143  0.63881669 0.004229  ]
[0.7212148  0.48915531 0.3487653  0.76978018 0.24460743]]

[[0.05257013 0.24367052 0.20641716 0.53998884 0.94534622]
[0.21599358 0.95632325 0.74569167 0.57238318 0.83751361]
[0.25340601 0.82207777 0.93364705 0.48946899 0.52742203]
[0.47682063 0.03695745 0.95422889 0.39139074 0.89996253]
[0.60027107 0.34780665 0.0589672  0.78532687 0.73960634]]]
'''
y=[1,2,3,4,5,6,7,8,9,10]
x=['Alhousainy','Ahmed','Esso','Mido','Mohammed','Mostafa','Ali','Marwan']
print('The Random Value From List Is => ',np.random.choice(y))
#The Random Value From List Is =>  5
print('The Random String Is => ',np.random.choice(x))
#The Random String Is =>  Mido
print('='*30)
np.random.shuffle(y)
np.random.shuffle(x)
np.random.shuffle(num1)
print('The Random Arrange Numbers For Using Shuffle Is => ',y)
#The Random Arrange Numbers For Using Shuffle Is =>  [8, 2, 3, 10, 7, 6, 9, 5, 4, 1]
print('The Random Arrange Strings For Using Shuffle Is => ',x)
#The Random Arrange Strings For Using Shuffle Is =>
#['Esso', 'Mido', 'Mohammed', 'Marwan', 'Alhousainy', 'Mostafa', 'Ali', 'Ahmed']
print('='*30)
print('The Random Matrix Using Shuffle Is => ',num1)
print('='*30)
'''
The Random Matrix Using Shuffle Is =>
[[0.32386938 0.4026439  0.59239029 0.96425279 0.36999321]
[0.77417548 0.63440626 0.10528692 0.60374755 0.82783097]
[0.41162183 0.04573464 0.9489782  0.86348638 0.82631079]
[0.3016322  0.20762697 0.79016188 0.79124935 0.74996881]
[0.00738488 0.94407484 0.89862883 0.17761112 0.53403612]]
'''
'''
p.zeros((2,), dtype=[('x', 'i4'), ('y', 'i4')]) # custom dtype
array([(0, 0), (0, 0)],
      dtype=[('x', '<i4'), ('y', '<i4')])
'''
num2=np.zeros(20)
num3=np.ones(20)
print('The Zero Matrix Is => ',num2)
#The Zero Matrix Is =>  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
print('The Ones Matrix Is => ',num3)
#The Ones Matrix Is =>  [1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
print('='*30)
num4=np.zeros((5,5))
print('The 2D Matrix Is => ',num4)
'''
The 2D Matrix Is => 
[[0. 0. 0. 0. 0.]
[0. 0. 0. 0. 0.]
[0. 0. 0. 0. 0.]
[0. 0. 0. 0. 0.]
[0. 0. 0. 0. 0.]]
'''
num6=np.ones((3,6,6))
print('='*30)
print('The 3D Matrix Is => ',num6)
'''
The 3D Matrix Is =>  
[[[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]]

[[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]]

[[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]
[1. 1. 1. 1. 1. 1.]]]
'''
print('='*30)
print('The Identity Matrix Is => ',np.eye(5))
print('='*30)
'''
The Identity Matrix Is =>
[[1. 0. 0. 0. 0.]
[0. 1. 0. 0. 0.]
[0. 0. 1. 0. 0.]
[0. 0. 0. 1. 0.]
[0. 0. 0. 0. 1.]]
'''
print('The Full Matrix For Number 45 Is => ',np.full((6,6),45))
print('='*30)
'''
The Full Matrix For Number 45 Is =>
[[45 45 45 45 45 45]
[45 45 45 45 45 45]
[45 45 45 45 45 45]
[45 45 45 45 45 45]
[45 45 45 45 45 45]
[45 45 45 45 45 45]]
'''

num7=np.arange(18).reshape(3,6)
num8=np.arange(27).reshape(3,3,3)
print('The Matrix Is From 0 To 17 Is => ',num7)
print('='*30)
'''
The Matrix Is From 0 To 17 Is =>
[[ 0  1  2  3  4  5]
[ 6  7  8  9 10 11]
[12 13 14 15 16 17]]
'''
#My_New_Array_Num7=num7.reshape(3,6)
#print('The Matrix Is From 0 To 17 Is => ',My_New_Array_Num7)
#print('='*30)
print('The Matrix 3D From 0 To 26 Is => ',num8)
print('='*30)
'''
The Matrix 3D From 0 To 26 Is =>
[[[ 0  1  2]
[ 3  4  5]
[ 6  7  8]]

[[ 9 10 11]
[12 13 14]
[15 16 17]]

[[18 19 20]
[21 22 23]
[24 25 26]]]
'''
#print('='*30)
#My_New_Array_Num8=num8.reshape(3,3,3)
#print('The Matrix 3D From 0 To 26 Is => ',My_New_Array_Num8)
#print('='*30)
from numpy import *
a =arange(18).reshape(3,6)
b =arange(27).reshape(3,3,3)
print(a)
print(b)
'''
[[ 0  1  2  3  4  5]
[ 6  7  8  9 10 11]
[12 13 14 15 16 17]]
[[[ 0  1  2]
[ 3  4  5]
[ 6  7  8]]

[[ 9 10 11]
[12 13 14]
[15 16 17]]

[[18 19 20]
[21 22 23]
[24 25 26]]]
'''
print('='*30)
my_arr = np.arange(6)
print(my_arr)
my_new_arr = my_arr.reshape(2,3)
print(my_new_arr)
'''
[0 1 2 3 4 5]
[[0 1 2]
 [3 4 5]]
'''
print('='*30)
num9=np.arange(15)
np.random.shuffle(num9)
num_sh=num9.reshape(3,5)
print('The Shuffle Matrix Is => ',num_sh)
print('='*30)
'''
The Shuffle Matrix Is =>
[[10  8  7  9 14]
[ 6  1 12  5 13]
[11  2  4  0  3]]
'''
num10=np.arange(125)
np.random.shuffle(num10)
num10_sh=num10.reshape(5,5,5)
print('The Random Matrix Shuffle Is => ',num10_sh)
print('='*30)
'''
The Random Matrix Shuffle Is =>
[[[ 74  47   9  27 113]
[ 11 119  45 107  88]
[104  14  50 121  36]
[ 42  24  55  67  90]
[ 13  84  62 118  82]]

[[111 101  80 124  10]
[ 57  61 122  60   5]
[ 86  18 115  95 112]
[ 28  71  21  97 123]
[ 78  41   4  46 108]]

[[  6  37  98  33  77]
[ 73  63 114  72  69]
[ 40 109  32  29 117]
[  3  85  38 106  70]
[  2  49  94  89  58]]

[[  0  51  44 102  91]
[ 22  56  54  39  43]
[ 30  48 116  79  26]
[ 87  31  52   8  20]
[103 110  68 105  53]]

[[ 96  93  65  81  64]
[100  92 120  17  75]
[ 16  59  12  34   1]
[ 99  23  35  19   7]
[ 66  25  83  76  15]]]
'''
Line=np.linspace(0,30)
print('The Random Numbers From 0 To 30 Is => ',Line)
print('='*30)
'''
The Random Numbers From 0 To 30 Is =>  
[ 0.          0.6122449   1.2244898   1.83673469  2.44897959  3.06122449
3.67346939  4.28571429  4.89795918  5.51020408  6.12244898  6.73469388    
7.34693878  7.95918367  8.57142857  9.18367347  9.79591837 10.40816327    
11.02040816 11.63265306 12.24489796 12.85714286 13.46938776 14.08163265    
14.69387755 15.30612245 15.91836735 16.53061224 17.14285714 17.75510204    
18.36734694 18.97959184 19.59183673 20.20408163 20.81632653 21.42857143    
22.04081633 22.65306122 23.26530612 23.87755102 24.48979592 25.10204082    
25.71428571 26.32653061 26.93877551 27.55102041 28.16326531 28.7755102     
29.3877551  30.]
'''
Line1=np.linspace(0,100,20)
print('The Twenty Random Nunbers From 0 To 100 Is => ',Line1)
print('='*30)
'''
The Twenty Random Nunbers From 0 To 100 Is =>  
[  0.           5.26315789  10.52631579  15.78947368  21.05263158
26.31578947  31.57894737  36.84210526  42.10526316  47.36842105
52.63157895  57.89473684  63.15789474  68.42105263  73.68421053
78.94736842  84.21052632  89.47368421  94.73684211 100.]
'''
Line2=np.linspace(1,201)
print('The Numbers From 1 To 200 Is => ',Line2)
print('='*30)
'''
The Numbers From 1 To 200 Is =>  
[  1.           5.08163265   9.16326531  13.24489796  17.32653061
21.40816327  25.48979592  29.57142857  33.65306122  37.73469388
41.81632653  45.89795918  49.97959184  54.06122449  58.14285714
62.2244898   66.30612245  70.3877551   74.46938776  78.55102041
82.63265306  86.71428571  90.79591837  94.87755102  98.95918367
103.04081633 107.12244898 111.20408163 115.28571429 119.36734694
123.44897959 127.53061224 131.6122449  135.69387755 139.7755102
143.85714286 147.93877551 152.02040816 156.10204082 160.18367347
164.26530612 168.34693878 172.42857143 176.51020408 180.59183673
184.67346939 188.75510204 192.83673469 196.91836735 201.]
'''
Line3=np.linspace(3,17)
print('The Numbers From 3 To 16 Is => ',Line3)
print('='*30)
'''
The Numbers From 3 To 16 Is =>
[ 3.          3.28571429  3.57142857  3.85714286  4.14285714  4.42857143
4.71428571  5.          5.28571429  5.57142857  5.85714286  6.14285714    
6.42857143  6.71428571  7.          7.28571429  7.57142857  7.85714286    
8.14285714  8.42857143  8.71428571  9.          9.28571429  9.57142857    
9.85714286 10.14285714 10.42857143 10.71428571 11.         11.28571429    
11.57142857 11.85714286 12.14285714 12.42857143 12.71428571 13.
13.28571429 13.57142857 13.85714286 14.14285714 14.42857143 14.71428571    
15.         15.28571429 15.57142857 15.85714286 16.14285714 16.42857143  16.71428571 17.]
'''
Line4=np.linspace(3,17,20)
print('The Numbers From 3 To 16 Is => ',Line4)
print('='*30)
'''
The Numbers From 3 To 16 Is =>
[ 3.          3.73684211  4.47368421  5.21052632  5.94736842  6.68421053
7.42105263  8.15789474  8.89473684  9.63157895 10.36842105 11.10526316    
11.84210526 12.57894737 13.31578947 14.05263158 14.78947368 15.52631579    
16.26315789 17.        ]
'''
'''
Line=np.linspace(0,30)
Line1=np.linspace(0,100,20)
Line2=np.linspace(1,201)
Line3=np.linspace(3,17)
Line4=np.linspace(3,17,20)
'''
Line5=np.linspace(0,30).reshape(5,10)
print('The Matrix Line1 Is => ',Line5)
print('='*30)
'''
The Matrix Line1 Is =>  
[[0. 0.6122449 1.2244898 1.83673469 2.44897959 3.06122449 
3.67346939  4.28571429  4.89795918  5.51020408]
[6.12244898 6.73469388 7.34693878  7.95918367  8.57142857  9.18367347   
9.79591837 10.40816327 11.02040816 11.63265306]
[12.24489796 12.85714286 13.46938776 14.08163265 14.69387755 15.30612245   
15.91836735 16.53061224 17.14285714 17.75510204]
[18.36734694 18.97959184 19.59183673 20.20408163 20.81632653 21.42857143   
22.04081633 22.65306122 23.26530612 23.87755102]
[24.48979592 25.10204082 25.71428571 26.32653061 26.93877551 27.55102041   
28.16326531 28.7755102  29.3877551  30.        ]]
'''
Line6=np.linspace(0,100,20).reshape(5,4)
print('The Matrix Line 2 Is => ',Line6)
print('='*30)
'''
The Matrix Line 2 Is =>  
[[  0.           5.26315789  10.52631579  15.78947368]
[ 21.05263158  26.31578947  31.57894737  36.84210526]
[ 42.10526316  47.36842105  52.63157895  57.89473684]
[ 63.15789474  68.42105263  73.68421053  78.94736842]
[ 84.21052632  89.47368421  94.73684211 100.        ]]
'''
Line7=np.linspace(0,100,27).reshape(3,3,3)
print('The 3D Matrix Is=> ',Line7)
print('='*30)
'''
The 3D Matrix Is=>  
[[[  0.           3.84615385   7.69230769]
[ 11.53846154  15.38461538  19.23076923]
[ 23.07692308  26.92307692  30.76923077]]

[[ 34.61538462  38.46153846  42.30769231]
[ 46.15384615  50.          53.84615385]
[ 57.69230769  61.53846154  65.38461538]]

[[ 69.23076923  73.07692308  76.92307692]
[ 80.76923077  84.61538462  88.46153846]
[ 92.30769231  96.15384615 100.        ]]]
'''
Diag=np.diag(array([5,12,4,-1,3,10]))
print('The Diagonal Matrix Is => ',Diag)
print('='*30)
'''
The Diagonal Matrix Is => 
[[ 5  0  0  0  0  0]
[ 0 12  0  0  0  0]
[ 0  0  4  0  0  0]
[ 0  0  0 -1  0  0]
[ 0  0  0  0  3  0]
[ 0  0  0  0  0 10]]
'''
Diag2=np.diag(array([10,5,30,40,8,-50]),k=4)
print('The Diagonal Matrix Is => ',Diag2)
print('='*30)
'''
The Diagonal Matrix Is =>  
[[  0   0   0   0  10   0   0   0   0   0]       
[  0   0   0   0   0   5   0   0   0   0]
[  0   0   0   0   0   0  30   0   0   0]
[  0   0   0   0   0   0   0  40   0   0]
[  0   0   0   0   0   0   0   0   8   0]
[  0   0   0   0   0   0   0   0   0 -50]
[  0   0   0   0   0   0   0   0   0   0]
[  0   0   0   0   0   0   0   0   0   0]
[  0   0   0   0   0   0   0   0   0   0]
[  0   0   0   0   0   0   0   0   0   0]]
'''